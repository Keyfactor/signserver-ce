#
# $Id$
#
# Build configuration of SignServer. Modify at will before building.
# Note: You might have to run "ant clean" before building for some changes to
# take effect.
# 


# ------------ Application server configuration --------------------------------

# Application server type
# Possible values: jboss, glassfish
# Default jboss
#appserver.type=jboss

# Application server home folder
# Default: $APPSRV_HOME or $JBOSS_HOME
#appserver.home=${basedir}/../../jboss-4.2.3
#appserver.home=/usr/local/SUNWappserver/
#appserver.home=${env.APPSRV_HOME}

# JBoss configuration to deploy to
# Available options are: all, default, minimal
# Default: default
#jboss.config=default

# JBoss deploy directory
# available options are: deploy, farm
# Default : deploy
#jboss.deploy=deploy

# GlassFish domain home folder
# Default: ${appserver.home}/domains/domain1
#glassfish.server.home.dir=/home/markus/.netbeans/6.7/GlassFishV2Domain


# ------------ Java ------------------------------------------------------------

# Java version
# Currently only 1.6 can be specified.
# Default: 1.6
#server.java.target=1.6
#client.java.target=1.6


# ------------ Web GUI configuration -------------------------------------------

# Configure the web server in JBoss to use HTTPS and the specified bind address 
# and ports etc.
# Setting j2ee.web-nohttps to true skips this step.
# Default: false
# Comment out or set to false if the web server should be configured. 
# Note that you will need p12/tomcat.jks and p12/truststore.jks keystore for web server https configuration. 
j2ee.web-nohttps=true

# When upgrading, the important options are:
# - httpsserver.password

# Password for java trust keystore (p12/truststore.jks), default is changeit.
#java.trustpassword=changeit

# Path to the root certificate to be imported into the java truststore.
#java.trustcert=p12/rootcert.cer

# The password used to protect the web servers SSL keystore.
#httpsserver.password=serverpwd

# The path to the web servers SSL keystore.
# Default: p12/tomcat.jks
#httpsserver.keystore=p12/tomcat.jks

# The public port JBoss will listen to http on
# Default 8080
#httpserver.pubhttp=8080

# The public port JBoss will listen to https on, no client cert required
# Default 8442
#httpserver.pubhttps=8442

# The private port JBoss will listen to https on, client cert required
# Default 8443
#httpserver.privhttps=8443

# The interfaces JBoss will bind to. E.g. 127.0.0.1 will only allow connections from localhost.
# Default 0.0.0.0
#httpsserver.bindaddress.pubhttp=0.0.0.0
#httpsserver.bindaddress.pubhttps=0.0.0.0
#httpsserver.bindaddress.privhttps=0.0.0.0

# Default content encoding used to display JSP pages, for example ISO-8859-1, UTF-8 or GBK.
# Default: ISO-8859-1
#web.contentencoding=ISO-8859-1


# ------------- Database configuration -----------------------------------------

# jndi name of the datasource to use in deployment descriptors of ejbs.
# default: SignServerDS
#datasource.jndi-name=SignServerDS

# Prefix for the jndi name of the datasource to use in deployment descriptors of ejbs. 
# JBoss requires 'java:/' as prefix, while weblogic does not want anything ('') and
# GlassFish uses jdbc/
# default: java:/
#datasource.jndi-name-prefix=java:/
#datasource.jndi-name-prefix=
#datasource.jndi-name-prefix=jdbc/

# The database name selected for deployment
# Default: hsqldb
#database.name=mysql
#database.name=postgres
#database.name=mssql2000
#database.name=oracle
#database.name=sapdb
#database.name=sybase

# Database connection URL.
# This is the URL used to connect to the database, used to configure a new datasource in JBoss.
# Default: jdbc:hsqldb:${jboss.server.data.dir}${/}hypersonic${/}SignServerLocalDB
# Mysql standard:
#database.url=jdbc:mysql://127.0.0.1:3306/signserver
# Mysql Clusters should use something like:
#database.url=jdbc:mysql://host1,host2/signserver
#database.url=jdbc:mysql://192.168.1.15,192.168.1.18/signserver
#database.url=jdbc:postgresql://127.0.0.1/signserver
#database.url=jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=signserver
#database.url=jdbc:oracle:thin:@127.0.0.1:1521:xe
#database.url=jdbc:datadirect:oracle://127.0.0.1:1521;SID=signserver

#Uncomment the follwing setting if you are using MySQL cluster. Leave it commented otherwise.
#database.use.mysqlcluster=true

# JDBC driver classname.
# The JEE server needs to be configured with the appropriate JDBC driver for
# the selected database
# Default: org.hsqldb.jdbcDriver
#database.driver=com.mysql.jdbc.Driver
#database.driver=org.postgresql.Driver
#database.driver=com.microsoft.jdbc.sqlserver.SQLServerDriver
#database.driver=oracle.jdbc.driver.OracleDriver
#database.driver=com.ddtek.jdbc.oracle.OracleDriver

# Database username.
# Default: sa (works with hsqldb)
#database.username=signserver

# Database password.
# Default: (blank works with hsqldb)
#database.password=signserver


# -------------- JAX-WS Web Service Configuration ------------------------------
#
# JAX-WS Web Service requires JAX-WS 2.1 to build.
#
# Set to false to disable Main WebService deployment. 
# If set to false you must also disable the validationclient and signingandvalidationapi modules below.
#signserverws.enabled=true

# Set to true to enable the Generic WS API
# Default true
#genericws.enabled=true

# Set to true to enable Validation WebService deployment
# Default false
#validationws.enabled=false

# Set to true to enable Admin WebService deployment.
# Default true
#adminws.enabled=true


# -------------- Modules Configurations ----------------------------------------
#

# Set to true to include all the module classes in the main signserver.ear.
# If you do not enable the cluster class loader this option must be used 
# in order for signers to be configured.
#
# If module.X.enabled=true the module X is compiled.
# If also module.X.include=true the module X is built in.
# If includemodulesinbuild=true _all_ modules are compiled and built in.
#
# Default: true
#includemodulesinbuild=true

# Include Log4j configuration in EAR (not needed for JBoss)
# Default: build=false, include=false
#module.log4j.enabled=false
#module.log4j.include=false

# Module Renewal
# Default: build=false, include=true
#module.renewal.enabled=false
#module.renewal.include=true

# Module XMLSigner
# Default: build=true, include=false
#module.xmlsigner.enabled=true
#module.xmlsigner.include=false

# Module XMLValidator
# Default: build=true, include=false
#module.xmlvalidator.enabled=true
#module.xmlvalidator.include=false

# Module CMSSigner
# Default: build=true, include=false
#module.cmssigner.enabled=true
#module.cmssigner.include=false

# Module ODFSigner
# Default: build=true, include=false
#module.odfsigner.enabled=true
#module.odfsigner.include=false

# Module OOXMLSigner
# Default: build=true, include=false
#module.ooxmlsigner.enabled=true
#module.ooxmlsigner.include=false

# Module PDFSigner
# Default: build=true, include=false
#module.pdfsigner.enabled=true
#module.pdfsigner.include=false

# Module TSA
# Default: build=true, include=false
#module.tsa.enabled=true
#module.tsa.include=false

# Module MRTDSODSigner
# Default: build=true, include=false
#module.mrtdsodsigner.enabled=true
#module.mrtdsodsigner.include=false

# Module MRTDSigner
# Default: build=true, include=false
#module.mrtdsigner.enabled=true
#module.mrtdsigner.include=false

# Module WSRA
# Default: build=true
#module.wsra.enabled=true


# -------------- Client Configurations -----------------------------------------
#
# Set to true to enable build of the TimeStampClient
#
# Default: true
#timestampclient.enabled=true

# Set to true to enable build of the validation client.
# For this to build must also signserverws.enabled be set
# to true.
#
# Default: true
#validationclient.enabled=true

# Set to true to enable the PDF performance test client
# Default: false
#pdfperformancetest.enabled=false

# Set to true to enable build of the SigningAndValidationAPI.
# For this to build must also signserverws.enabled be set
# to true.
#
# Default: true
#signingandvalidationapi.enabled=true

# Set to enable build of the AdminGUI
# Default: true
#admingui.enabled=true

# Set to enable build of the ClientCLI
# Default: true
#clientcli.enabled=true

# -------------- Cluster Class Loader Configuration ---------------------------
#

# Set to true to enable the use of the cluster class loader
#
# Warning: the cluster class loader is still experimental and should
# be used for development purposes only.
#
# Default: false
#useclusterclassloader=false

# Set to false if class versions should be disabled (good for
# development purposes when remote debugging is required).
#
# Default: true
#clusterclassloader.useclassversions=true

# Set to true if signing of resource data should be required.
#
# Default: false
#clusterclassloader.requiresignature=false

# Setting indicating the path to the truststore file
# that contains all CA certificates that is trusted
# for signing of resource data.
#
# Only used if clusterclassloader.requiresignedresources is set to true.
#clusterclassloader.pathtotruststore=

# Password locking the truststore specified above.
#
# Only used if clusterclassloader.requiresignedresources is set to true.
#clusterclassloader.truststorepwd=


# ------------ PrimeCardHSM ----------------------------------------------------

#PrimeCardHSM Specific Properties
#Uncomment to when using PrimeCardHSM, default false.
#primeCard.use=true
#primeCard.home=${env.PRIMECARD_HOME}


# -------------- Documentation Configuration -----------------------------------

# Deploy the documentation.
#
# Default: true
#webdoc.enabled=true


# -------------- Status And Health Check Configuration -------------------------
#
# Parameters configuring how health check and status should be
# configured.
# Sample url: http://localhost:8080/signserver/healthcheck/signserverhealth
#
# Setting specifying which remote IPs that may call this healthcheck servlet. Use ';' for between multiple IPs. 
# Default : 127.0.0.1
#healthcheck.authorizedips=127.0.0.1;::1;0:0:0:0:0:0:0:1

# Parameter to set the number of Mega Bytes of memory that must be free before removing     
# the node out of the cluster.
# Default : 1
#healthcheck.minimumfreememory=1

# Parameter indicating the string that should be used to do 
# a minimal check that the database is working. May differ between databases.
# Default : Select count(*) from signerconfigdata
#healthcheck.checkdbstring=Select count(*) from signerconfigdata

# ------------- Cluster Deployment Configuration -------------------------------
# Configuration used to centrally deploy the application server in a
# clustered environment. Currently are up to 6 nodes supported to
# were the application is deployed.
#
# Each node should run SSH with a trusting the key defined in deploy.ssh.keyfilepath
# Each node should have a mirrored JBoss installation at the same place as
# the current node.
#
# To add a node, uncomment the deploy.hostname.nodeX property and set it's property
# If no node is defined will JBOSS_HOME at localhost be used as deploy dir.

#deploy.hostname.node1=
#deploy.hostname.node2=
#deploy.hostname.node3=
#deploy.hostname.node4=
#deploy.hostname.node5=
#deploy.hostname.node6=

# User to use for the SSH session
# Default: jboss
#deploy.ssh.user=jboss

# Path to the id_rsa (or equivalent) file for SSH authentication
# Default: /home/jboss/.ssh/id_rsa
#deploy.ssh.keyfilepath=

# Path to the known hosts file
# Default: /home/jboss/.ssh/known_hosts
#deploy.ssh.knownhostsfile=

# Path to the location where the JBoss instance is located at the JBoss services.
# Default: /home/jboss/jboss
#deploy.ssh.appsrvhome=

# Tomcat version. If SignServer should use a HTTPS interface it will
# deploy a keystore to all nodes in the cluster. Depending on the version
# of tomcat is the files placed a little different.
# Available options are: tomcat41, tomcat50, tomcat55
# Default: tomcat55
#deploy.tomcat.version=


# ------------- Custom Code Configuration --------------------------------------
# It is possible to have a custom code tree outside the sign server
# for custom modifications.
#
# The external code will be copied into the temporary code tree
# used for pre-processing
#
# Location of external java source directory
#custom.src.java = <custom-code>/src/java
#
# Location of external web source directory
#custom.src.web= <custom-code>/src/web
#
# Location of optional custom build xml that will be imported.
#custom.build.xml= <custom-code>/build.xml
#
# Setting defining a custom ISignServerCommandFactory used for customizing
# the CLI interface.
#
# Default : org.signserver.cli.DefaultSignServerCommandFactory
#custom.commandfactory=org.signserver.cli.DefaultSignServerCommandFactory
