<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core">

    <ui:remove>
    <!--
    /*************************************************************************
    *                                                                       *
    *  SignServer: The OpenSource Automated Signing Server                  *
    *                                                                       *
    *  This software is free software; you can redistribute it and/or       *
    *  modify it under the terms of the GNU Lesser General Public           *
    *  License as published by the Free Software Foundation; either         *
    *  version 2.1 of the License, or any later version.                    *
    *                                                                       *
    *  See terms of license at gnu.org.                                     *
    *                                                                       *
    *************************************************************************/

    Version: $Id$
    -->
    </ui:remove>

    <f:metadata>
        <f:viewParam name="id" value="#{workerBean.id}"/>
        <f:viewParam name="id" value="#{generateKeyBean.id}"/>
    </f:metadata>
    
    <body>

        <ui:composition template="WEB-INF/templates/template.xhtml">
            <ui:param name="activeMenu" value="workers"/>

            <ui:define name="title">
                <h:outputFormat value="#{text['Worker_X']}">
                    <f:param value="#{workerBean.worker.name}"/>
                </h:outputFormat>
                <h:outputText value="- #{text['Crypto_Token_-_Generate_Key']}"/>
            </ui:define>

            <ui:define name="top">
                
            </ui:define>

            <ui:define name="content">
                <ui:include src="/worker-menu.xhtml">
                    <ui:param name="worker" value="#{workerBean.worker}"/>
                    <ui:param name="workerActiveMenu" value="worker-cryptotoken"/>
                </ui:include>

                <div id="worker_content">
                    <h:panelGroup rendered="#{workerBean.worker.existing and not workerBean.keyGenerationDisabled}">
                        <h2><h:outputText value="#{text['Generate_Key']}"/></h2>
                        
                        <h:form>
                            <h:dataTable value="#{generateKeyBean.items}" var="item" class="dss1" headerClass="dss1" footerClass="dss1" columnClasses="dss1,dss1,dss1" rowClasses="dss1,dss1_odd">
                                <h:column>
                                    <f:facet name="header">
                                        <h:outputText value="#{text['New_Key_Alias']}"/>
                                    </f:facet>
                                    <h:inputText id="alias" value="#{item.alias}"/>
                                </h:column>
                                <h:column>
                                    <f:facet name="header">
                                        <h:outputText value="#{text['Key_Algorithm']}"/>
                                    </f:facet>
                                    <h:inputText id="keyAlg" value="#{item.keyAlg}"
                                                 rendered="#{!item.selectAlgFromList}"/>
                                    <h:selectOneMenu id="keyAlgDropdown"
                                                      value="#{item.keyAlg}"
                                                      rendered="#{item.selectAlgFromList}">
                                        <f:selectItems value="#{item.algorithmValues}"/>
                                        <f:ajax render="keySpecDropdown"/>
                                    </h:selectOneMenu>
                                    <h:commandButton class="buttonNeutral"
                                                     id="enterAlgManually"
                                                     value="&gt;"
                                                     action="#{item.setSelectAlgFromList(false)}"
                                                     rendered="#{item.selectAlgFromList}"/>
                                    <h:commandButton class="buttonNeutral"
                                                     id="selectAlgFromList"
                                                     value="&lt;"
                                                     action="#{item.setSelectAlgFromList(true)}"
                                                     rendered="#{!item.selectAlgFromList}"/>
                                </h:column>
                                <h:column>
                                    <f:facet name="header">
                                        <h:outputText value="#{text['Key_Specification']}"/>
                                    </f:facet>
                                    <h:inputText id="keySpec" value="#{item.keySpec}"
                                                 rendered="#{!item.selectKeySpecFromList}"/>
                                    <h:selectOneMenu id="keySpecDropdown"
                                                     value="#{item.keySpec}"
                                                     rendered="#{item.selectKeySpecFromList}">
                                        <f:selectItems value="#{item.keySpecValues}"/>
                                    </h:selectOneMenu>
                                    <h:commandButton class="buttonNeutral"
                                                     id="enterKeySpecManually"
                                                     value="&gt;"
                                                     action="#{item.setSelectKeySpecFromList(false)}"
                                                     rendered="#{item.selectKeySpecFromList}"/>
                                    <h:commandButton class="buttonNeutral"
                                                     id="enterKeySpecFromList"
                                                     value="&lt;"
                                                     action="#{item.setSelectKeySpecFromList(true)}"
                                                     rendered="#{!item.selectKeySpecFromList}"/>
                                </h:column>
                                <h:column>
                                    <span class="errorMessage"><h:outputText value="#{item.errorMessage}"/></span>
                                </h:column>
                                <h:column>
                                    <h:commandButton class="buttonNeutral" value="-" action="#{generateKeyBean.removeAction()}" rendered="#{item.last and not item.first}"/> 
                                    <h:commandButton class="buttonNeutral" value="+" action="#{generateKeyBean.addAction()}" rendered="#{item.last}"/>
                                </h:column>
                            </h:dataTable>
                            <h:commandButton class="buttonPositive" value="#{text['Generate']}" action="#{generateKeyBean.submitAction()}"/> <h:link value="#{text['Cancel']}" outcome="worker-cryptotoken"><f:param name="id" value="#{workerBean.worker.id}"/></h:link>
                        </h:form>
                    </h:panelGroup>
                    <h:panelGroup rendered="#{!workerBean.worker.existing and not workerBean.keyGenerationDisabled}">
                        <h2><h:outputText value="#{text['Worker_Not_Found']}"/></h2>
                        <p>
                            <h:outputText value="#{text['The_specified_worker_can_not_be_found.']}"/>
                        </p>
                    </h:panelGroup>
                    <h:panelGroup rendered="#{workerBean.keyGenerationDisabled}">
                        <h2><h:outputText value="#{text['Generate_Key']}"/></h2>
                        <p>
                            <h:outputText class="errorMessage" value="#{text['Key_generation_is_disabled.']}"/>
                        </p>
                        <h:link value="#{text['Cancel']}" outcome="worker-cryptotoken"><f:param name="id" value="#{workerBean.worker.id}"/></h:link>
                    </h:panelGroup>
                </div>

            </ui:define>

            <ui:define name="bottom">
            </ui:define>

        </ui:composition>

    </body>
</html>
