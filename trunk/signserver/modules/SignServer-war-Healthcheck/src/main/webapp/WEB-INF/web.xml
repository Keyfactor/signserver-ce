<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
    <display-name>SignServer Health Check Configuration</display-name>
    <filter>
        <filter-name>ClickjackFilterDeny</filter-name>
        <filter-class>org.signserver.web.common.owasp.filters.ClickjackFilter</filter-class>
        <init-param>
            <param-name>mode</param-name>
            <param-value>DENY</param-value>
        </init-param>
    </filter>
    <filter>
        <filter-name>ContentSecurityPolicyFilter</filter-name>
        <filter-class>org.signserver.web.common.owasp.filters.ContentSecurityPolicyFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>ClickjackFilterDeny</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ContentSecurityPolicyFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <session-config>
        <cookie-config>
            <http-only>true</http-only>
        </cookie-config>
    </session-config>
    <servlet>
        <description>SignServerHealthCheckServlet</description>
        <servlet-name>SignServerHealthCheckServlet</servlet-name>
        <servlet-class>org.signserver.web.pub.HealthCheckServlet</servlet-class>
        <!-- Required parameters -->
        <init-param>
            <description>Class performing the healthcheck. Must implement the IHealthCheck interface.</description>
            <param-name>HealthCheckClassPath</param-name>
            <param-value>org.signserver.web.SignServerHealthCheck</param-value>
        </init-param>
        <init-param>
            <description>Class creating the response to the loadbalancer or monitor software. Must implement the IHealthResponse interface.</description>
            <param-name>HealthResponseClassPath</param-name>
            <param-value>org.signserver.web.pub.cluster.TextResponse</param-value>
        </init-param>
        <!-- Optional parameters -->
        <init-param>
            <description>Specifies which remote IPs that may call this healthcheck servlet. Use ';' for between multiple IPs. 
                     Comment out this parameter to allow from all IPs.</description>
            <param-name>AuthorizedIPs</param-name>
            <param-value>${healthcheck.authorizedips}</param-value>
        </init-param>
        <!-- SignServerHealthCheck specific init parameters -->
        <init-param>
            <description>
                Parameter to set the number of Mega Bytes of memory that must be free before removing 
                the node out of the cluster.
            </description>
            <param-name>MinimumFreeMemory</param-name>
            <param-value>${healthcheck.minimumfreememory}</param-value>
        </init-param>
        <init-param>
            <description>
                Parameter indicating the string that should be used to do 
                a minimal check that the database is working.
            </description>
            <param-name>checkDBString</param-name>
            <param-value>${healthcheck.checkdbstring}</param-value>
        </init-param>
        <!-- TextResponse specific init parameters -->
        <init-param>
            <description>
                Text string used to say that every thing is ok with this node.
            </description>
            <param-name>OKMessage</param-name>
            <param-value>ALLOK</param-value>
        </init-param>
        <init-param>
            <description>
                Parameter saying if a errorcode 500 should be sent in case of error.
            </description>
            <param-name>SendServerError</param-name>
            <param-value>${healthcheck.sendservererror}</param-value>
        </init-param>
        <init-param>
        	<description>
        		Parameter specifying a file containing down-for-maintenance setting.
        	</description>
        	<param-name>MaintenanceFile</param-name>
            <param-value>${healthcheck.maintenancefile}</param-value>
        </init-param>
        <init-param>
        	<description>
        		Parameter specifying the property name to be used in the down-for-maintenance file.
        		The value of the property can be set to either true or false. The name is included in the maintenance message.
        	</description>
        	<param-name>MaintenancePropertyName</param-name>
            <param-value>${healthcheck.maintenancepropertyname}</param-value>
        </init-param>
        <init-param>
            <description>
                Parameter specifying a custom error message.
            </description>
            <param-name>CustomErrorMessage</param-name>
            <param-value>${healthcheck.customerrormessage}</param-value>
        </init-param>
        <!-- 
    <init-param>
        <description>
            Uncomment this parameter if you want a static error message instead of 
            one generatedÂ´by the HealthChecker.
        </description>
        <param-name>CustomErrorMessage</param-name>
        <param-value>NOTOK</param-value>
    </init-param> -->
    </servlet>
    <servlet-mapping>
        <servlet-name>SignServerHealthCheckServlet</servlet-name>
        <url-pattern>/signserverhealth</url-pattern>
    </servlet-mapping>
    
    <!-- DO NOT REMOVE THE FOLLOWING LINE, IT IS USED FOR POSTPROCESSING DURING BUILD -->
    <!--COMMENT-REPLACEMENT(ejbjarheader)-->
    
    <persistence-context-ref>
        <persistence-context-ref-name>persistence/em</persistence-context-ref-name>  
        <persistence-unit-name>SignServerJPA</persistence-unit-name>  
        <persistence-context-type>Transaction</persistence-context-type>  
        <injection-target>   
                <injection-target-class>org.signserver.web.pub.HealthCheckServlet</injection-target-class>   
                <injection-target-name>em</injection-target-name>  
        </injection-target>  
    </persistence-context-ref>
    
    <!--COMMENT-REPLACEMENT(ejbjarfooter)-->
    <!-- DO NOT REMOVE THE LINE ABOVE, IT IS USE FOR POSTPROCESSING DURING BUILD -->
    
    <env-entry>
        <env-entry-name>DataSource</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>${datasource.jndi-name-prefix}${datasource.jndi-name}</env-entry-value>
    </env-entry>
    
    <!-- block HTTP methods other than GET and POST -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>restricted methods</web-resource-name>
            <url-pattern>/*</url-pattern>
            <http-method>PUT</http-method>
            <http-method>DELETE</http-method>
            <http-method>OPTIONS</http-method>
            <http-method>TRACE</http-method>
        </web-resource-collection>
        <auth-constraint />
    </security-constraint>
    
    <error-page>
        <error-code>404</error-code>
        <location>/errorpages/error404.jsp</location>
    </error-page>
    <error-page>
        <error-code>400</error-code>
        <location>/errorpages/error400.jsp</location>
    </error-page>
    <error-page>
        <error-code>403</error-code>
        <location>/errorpages/error403.jsp</location>
    </error-page>
    <error-page>
        <error-code>413</error-code>
        <location>/errorpages/error413.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/errorpages/error500.jsp</location>
    </error-page>
    <error-page>
        <error-code>503</error-code>
        <location>/errorpages/error503.jsp</location>
    </error-page>
</web-app>