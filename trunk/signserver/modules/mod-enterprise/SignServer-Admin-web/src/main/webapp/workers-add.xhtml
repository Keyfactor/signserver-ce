<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core">

    <ui:remove>
    <!--
    /*************************************************************************
    *                                                                       *
    *  SignServer: The OpenSource Automated Signing Server                  *
    *                                                                       *
    *  This software is free software; you can redistribute it and/or       *
    *  modify it under the terms of the GNU Lesser General Public           *
    *  License as published by the Free Software Foundation; either         *
    *  version 2.1 of the License, or any later version.                    *
    *                                                                       *
    *  See terms of license at gnu.org.                                     *
    *                                                                       *
    *************************************************************************/

    Version: $Id$
    -->
    </ui:remove>

    <f:metadata>
        <f:viewParam name="id" value="#{workerBean.id}"/>
    </f:metadata>

    <body>

        <ui:composition template="WEB-INF/templates/template.xhtml">
            <ui:param name="activeMenu" value="workers"/>

            <ui:define name="title">
                <h:outputText value="#{text['Add_Worker/Load_Configuration']}"/>
            </ui:define>

            <ui:define name="top">
                
            </ui:define>

            <ui:define name="content">
                <h1><h:outputText value="#{text['Add_Worker/Load_Configuration']}"/></h1>
                
                <h:panelGroup rendered="#{addWorkerBean.step0}">
                    <h:form>
                        <h2><h:outputText value="#{text['Choose_Method_COLON']}"/></h2>
                        
                        <p>
                            <h:commandButton class="buttonFeatured" id="fromTemplateButton" action="#{addWorkerBean.fromTemplateAction()}" value="#{text['From_Template']}"/>, 
                            <h:commandButton class="buttonFeatured" id="fromFileButton" action="#{addWorkerBean.fromFileAction()}" value="#{text['From_File']}"/><h:outputText value=" #{text['or']} "/> 
                            <h:commandButton class="buttonFeatured" value="#{text['By_Properties']}" action="#{addWorkerBean.fromPropertiesAction()}"/>
                        </p>
                        <p>&nbsp;</p>
                    </h:form>
                </h:panelGroup>

                <h:panelGroup id="step1" rendered="#{addWorkerBean.step1 and addWorkerBean.methodForm}">
                    <h2><h:outputText value="#{text['Edit_Worker_Properties']}"/></h2>
                    <h:form>
                        <h:panelGrid columns="3">
                            <h:outputLabel for="workerId" value="#{text['Worker_ID_ASTERISK_COLON']}"/>
                            <h:inputText id="workerId" value="#{addWorkerBean.workerId}" requiredMessage="*">
                                <f:validator validatorId="optionallyRequiredValidator"/>
                                <f:attribute name="requiredIfSubmittedWith" value="#{components.buttonNext.clientId}"/>
                            </h:inputText>
                            <h:message for="workerId" class="errorMessage"/>

                            <h:outputLabel for="name" value="#{text['Name_ASTERISK_COLON']}"/>
                            <h:inputText id="name" value="#{addWorkerBean.name}" requiredMessage="*">
                                <f:validator validatorId="optionallyRequiredValidator"/>
                                <f:attribute name="requiredIfSubmittedWith" value="#{components.buttonNext.clientId}"/>
                            </h:inputText>
                            <h:message for="name" class="errorMessage"/>

                            <h:outputLabel for="implementationClass" value="#{text['Implementation_Class_ASTERISK_COLON']}"/>
                            <h:inputText id="implementationClass" value="#{addWorkerBean.implementationClass}" requiredMessage="*">
                                <f:validator validatorId="optionallyRequiredValidator"/>
                                <f:attribute name="requiredIfSubmittedWith" value="#{components.buttonNext.clientId}"/>
                            </h:inputText>
                            <h:message for="implementationClass" class="errorMessage"/>

                            <h:outputLabel for="cryptoTokenImplementationClass" value="#{text['Signer_Token_COLON']}"/>
                            <h:inputText id="cryptoTokenImplementationClass" value="#{addWorkerBean.cryptoTokenImplementationClass}"/>
                            <h:message for="cryptoTokenImplementationClass" class="errorMessage"/>

                            <h:outputLabel for="type" value="#{text['Type_ASTERISK_COLON']}"/>
                            <h:selectOneMenu id="type" value="#{addWorkerBean.type}" requiredMessage="*">
                                <f:selectItem itemValue="PROCESSABLE" itemLabel="PROCESSABLE"/>
                                <f:selectItem itemValue="CRYPTO_WORKER" itemLabel="CRYPTO_WORKER"/>
                                <f:selectItem itemValue="TIMED_SERVICE" itemLabel="TIMED_SERVICE"/>
                                <f:selectItem itemValue="SPECIAL" itemLabel="SPECIAL"/>
                                <f:validator validatorId="optionallyRequiredValidator"/>
                                <f:attribute name="requiredIfSubmittedWith" value="#{components.buttonNext.clientId}"/>
                            </h:selectOneMenu>
                            <h:message for="type" class="errorMessage"/>

                            <h:outputLabel for="table1" value="#{text['Additional_Properties_COLON']}"/>
                            <h:dataTable id="table1" value="#{addWorkerBean.config}" var="item" rendered="#{!addWorkerBean.propertyEditing and !addWorkerBean.propertyAdding}" class="dss1" headerClass="dss1" footerClass="dss1" columnClasses="dss1,dss1,dss1" rowClasses="dss1,dss1_odd">
                                <!--<f:facet name="header">
                                    <h:outputText value="Additional Properties:" />
                                </f:facet> -->
                                <h:column>
                                    <f:facet name="header">
                                        <h:outputText value="#{text['Property']}" />
                                    </f:facet>
                                    <h:outputText value="#{item.key}" />
                                </h:column>
                                <h:column>
                                    <f:facet name="header">
                                        <h:outputText value="#{text['Value']}" />
                                    </f:facet>
                                    <h:outputText value="#{item.value}" />
                                </h:column>
                                <h:column>
                                    <f:facet name="header">
                                        <h:outputText value="#{text['Actions']}"/>
                                    </f:facet>
                                    <h:commandButton class="buttonNeutral" value="#{text['Edit']}" action="#{addWorkerBean.startEditPropertyAction(item.key)}"/> |
                                    <h:commandButton class="buttonNeutral" value="#{text['Remove']}" action="#{addWorkerBean.removePropertyAction(item.key)}"/>
                                </h:column>
                                <f:facet name="footer">

                                        <h:commandButton class="buttonNeutral" value="#{text['Add...']}" action="#{addWorkerBean.startAddPropertyAction()}"/>

                                </f:facet>
                            </h:dataTable>
                            <h:message for="table1" class="errorMessage"/>

                            <h:panelGroup id="doAdd" rendered="#{addWorkerBean.propertyEditing or addWorkerBean.propertyAdding}">
                                <h:panelGrid columns="3">
                                    <h:outputLabel for="propertyName" value="#{text['Name_ASTERISK_COLON']}"/>
                                    <h:inputText id="propertyName" value="#{addWorkerBean.propertyName}" requiredMessage="*">
                                        <f:validator validatorId="optionallyRequiredValidator"/>
                                        <f:attribute name="requiredIfSubmittedWith" value="#{components.buttonAdd.clientId},#{components.buttonEdit.clientId}"/>
                                    </h:inputText>
                                    <h:message for="propertyName" class="errorMessage"/>

                                    <h:outputLabel for="propertyValue" value="#{text['Value_COLON']}"/>
                                    <h:inputTextarea id="propertyValue" value="#{addWorkerBean.propertyValue}"/>
                                    <h:panelGroup/>

                                    <h:commandButton class="buttonNeutral" value="#{text['Add']}" action="#{addWorkerBean.addPropertyAction()}" rendered="#{addWorkerBean.propertyAdding}" binding="#{components.buttonAdd}"/>
                                    <h:commandButton class="buttonNeutral" value="#{text['Apply']}" action="#{addWorkerBean.editPropertyAction()}" rendered="#{addWorkerBean.propertyEditing}" binding="#{components.buttonEdit}"/>
                                    <h:commandButton class="buttonNeutral" value="#{text['Cancel']}" action="#{addWorkerBean.cancelPropertyAction()}"/>
                                </h:panelGrid>
                            </h:panelGroup>

                        </h:panelGrid>

                        <h:commandButton class="buttonNeutral" value="#{text['Back']}" action="#{addWorkerBean.backToFirstAction()}"/> 
                        <h:commandButton class="buttonFeatured" value="#{text['Next']}" action="#{addWorkerBean.nextAction()}" binding="#{components.buttonNext}"/>
                    </h:form>
                </h:panelGroup>
                <h:panelGroup id="step2" rendered="#{addWorkerBean.step2}">
                    <h:form id="configForm">
                        <h:panelGroup rendered="#{addWorkerBean.methodFile}">
                            <h2><h:outputText value="#{text['Load_From_File']}"/></h2>
                        </h:panelGroup>
                        
                        <h:outputLabel for="configuration" value="#{text['Configuration_COLON']}"/><br/>
                        
                        <h:panelGroup id="fromFileControls" rendered="#{addWorkerBean.methodFile}">
                            <ui:remove>
                                <!-- Pure JavaScript file upload, since non-JS fallback of pasting upload exists -->
                            </ui:remove>
                            <p id="signerCertFileInputContainer" class="fileInputContainer"></p>
                            <script>
                                ejbca.ra.createFileUploadInput("signerCertNewFileInput", "signerCertFileInputContainer", function(uploadedText) {
                                    document.getElementById("configForm:configuration").value = uploadedText;
                                    //document.getElementById("keyPairForm:uploadCsrButton").click();
                                }, "ISO-8859-1");
                            </script>
                        </h:panelGroup>
                        <h:inputTextarea id="configuration" value="#{addWorkerBean.configuration}" class="propertiesInputTextarea" rows="20"/><br/>

                        <p class="errorMessage">
                            <h:outputText value="#{addWorkerBean.errorMessage}"/>
                        </p>
                        
                        <h:commandButton class="buttonNeutral" value="#{text['Reset']}" action="#{addWorkerBean.resetAction()}" rendered="#{!addWorkerBean.methodFile}"/>
                        
                        <p>&nbsp;</p>
                        <h:commandButton class="buttonNeutral" value="#{text['Back']}" action="#{addWorkerBean.backAction()}"/> <h:commandButton class="buttonFeatured" value="#{text['Apply']}" action="#{addWorkerBean.applyAction()}"/>
                    </h:form>
                </h:panelGroup>
                
                <h:panelGroup rendered="#{addWorkerBean.step1 and addWorkerBean.methodTemplate}">
                    <h:form>
                        <h2><h:outputText value="#{text['Load_From_Template']}"/></h2>
                        
                        <h:selectOneMenu value="#{addWorkerBean.selectedTemplate}">
                            <f:selectItems value="#{addWorkerBean.templateNames}"/>
                        </h:selectOneMenu>
                        
                        <p>&nbsp;</p>
                        <h:commandButton class="buttonNeutral" value="#{text['Back']}" action="#{addWorkerBean.backAction()}"/> <h:commandButton class="buttonFeatured" value="#{text['Next']}" action="#{addWorkerBean.nextAction()}"/>
                    </h:form>
                </h:panelGroup>
                
            </ui:define>

            <ui:define name="bottom">
            </ui:define>

        </ui:composition>

    </body>
</html>
